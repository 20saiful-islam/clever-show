config_name = string(default='client')
config_version = float(default=1.0)

[SERVER]
port = integer(default=25000, min=1)
host = ip_addr(default=192.168.1.101) # string?
buffer_size = integer(default=1024)

[BROADCAST]
use = boolean(default=True)
port = integer(default=8181, min=1)

[TELEMETRY]
transmit = boolean(default=True)
frequency = float(default=1.0, min=0)
log_resources = boolean(default=False)

[POSITION WATCHDOG]
enabled = boolean(default=True)
log_state = boolean(default=True)
# Available options: emergency_land, land, disarm
action = string(default=emergency_land)
# Time to get vision position after arm
# No visual position will be checked
# during this time after arming
vision_pose_delay_after_arm = float(default=3.0, min=0)
# Timeout for the last vision pose in /mavros/vision_pose/pose
# Set 0 to disable vision pose check
vision_pose_timeout = float(default=0.0, min=0)
# Max delta between current position and setpoint
# Set 0 to disable position delta check
position_delta_max = float(default=3.0, min=0)
# Time to disarm after action is triggered
disarm_timeout = float(default=10.0, min=0)

[EMERGENCY LAND]
thrust = float(default=0.45, min=0, max=1)
decrease_thrust_after = float(default=5.0, min=0)

[COPTER]
frame_id = string(default=map)
arming_time = float(default=0.5)
takeoff_height = float(default=1.0)
takeoff_time = float(default=5.0, min=0)
reach_first_point_time = float(default=5.0, min=0)
land_delay = float(default=1.0, min=0)
land_timeout = float(default=10.0, min=0)
# __list__ x y z
common_offset = float_list(default=list(0, 0, 0), min=3, max=3)

[FLOOR FRAME]
parent = string(default=map)
# Frame translation (x, y, z)
# __list__ x y z
translation = float_list(default=list(0.0, 0.0, 0.0), min=3, max=3)
# Frame rotation (roll, pitch, yaw) in degrees
# __list__ roll pitch yaw
rotation = float_list(default=list(0.0, 0.0, 0.0), min=3, max=3)

[GPS FRAME]
lat = string(default=0)
lon = string(default=0)
yaw = float(default=0)

[ANIMATION]
# Available options:
# 'auto' - automatic action selection from 'takeoff' or 'fly' based on current copter level
# 'takeoff' - takeoff to first output animation point after static_begin_time then execute 'takeoff logic'
# 'fly' - execute animation frames after static_begin_time
start_action = string(default=auto)
takeoff_level = float(default=0.5)
ground_level = float(default=0)
frame_delay = float(default=0.1, min=0.01)
# Animation ratio (x, y, z)
# __list__ x y z
ratio = float_list(default=list(1.0, 1.0, 1.0), min=3, max=3)
# Available options:
# 'animation' - take yaw from animation
# 'nan' - don't change yaw during flight
# or a number in degrees
yaw = string(default=180.0)
[[OUTPUT]]
static_begin = boolean(default=False)
takeoff = boolean(default=True)
route = boolean(default=True)
land = boolean(default=False)
static_end = boolean(default=False)

[LED]
use = boolean(default=False)
pin = integer(default=21, min=0, max=100)
count = integer(default=60, min=1)
takeoff_indication = boolean(default=True)
land_indication = boolean(default=True)

[PRIVATE]
# Available options: /hostname ; /default ; /ip ; any string 63 characters length
id = string(default=/hostname, max=63)  #TODO our re check
# Drone's individual offset (x, y, z)
# __list__ x y z
offset = float_list(default=list(0, 0, 0), min=3, max=3)

[SYSTEM]
change_hostname = boolean(default=True)
restart_after_rename = boolean(default=True)

[NTP]
use = boolean(default=False)
host = string(default=ntp1.stratum2.ru)
port = integer(default=123, min=1)
